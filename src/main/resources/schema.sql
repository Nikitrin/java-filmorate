drop table if exists FRIENDS;
drop table if exists FILM_LIKES;
drop table if exists USERS;
drop table if exists FILM_GENRES;
drop table if exists GENRES;
drop table if exists FILMS;
drop table if exists MPA_RATINGS;
drop table if exists FILM_LIKES;

create table if not exists  users (
    id int generated by default as identity,
    email varchar(320) unique not null,
    login varchar(63) unique not null,
    name varchar(63) not null,
    birthday date not null,
    constraint user_pk primary key (id)
    );

create index if not exists user_email on users (email);
create index if not exists user_login on users (login);

create table if not exists friends (
    user_id int references users (id),
    friend_id int references users (id),
    is_approved boolean default false,
    constraint friends_pk primary key (user_id, friend_id)
    );

create table if not exists mpa_ratings (
    id int generated by default as identity,
    rating varchar(31) unique not null,
    constraint mpa_pk primary key (id)
    );

create table if not exists films (
    id int generated by default as identity,
    title varchar(127) unique not null,
    description varchar(255) not null,
    realise_date date not null,
    duration int not null,
    mpa_rating int references mpa_ratings (id),
    constraint film_pk primary key (id)
    );

create table if not exists genres (
    id int generated by default as identity,
    genre varchar(63) unique not null,
    constraint genre_pk primary key (id)
    );

create table if not exists film_genres (
    film int references films (id),
    genre int references genres (id),
    constraint film_genre_pk primary key (film, genre)
    );

create table if not exists film_likes (
    film int references films (id),
    user_like int references users (id),
    constraint film_likes_pk primary key (film, user_like)
    );